<?xml version="1.0" encoding="UTF-8"?>

<!-- ===================================================================== -->
<!-- -->
<!-- JBoss Server Configuration -->
<!-- -->
<!-- ===================================================================== -->


<datasources>
	<local-tx-datasource>
		<jndi-name>MysqlDS</jndi-name>
		<connection-url>jdbc:mysql://localhost:3306/openloteria</connection-url>
		<!-- See on WIKI page below how to use Oracle's thin JDBC driver to connect 
			with enterprise RAC. -->
		<!-- Here are a couple of the possible OCI configurations. For more information, 
			see http://otn.oracle.com/docs/products/oracle9i/doc_library/release2/java.920/a96654/toc.htm 
			<connection-url>jdbc:oracle:oci:@youroracle-tns-name</connection-url> or 
			<connection-url>jdbc:oracle:oci:@(description=(address=(host=youroraclehost)(protocol=tcp)(port=1521))(connect_data=(SERVICE_NAME=yourservicename)))</connection-url> 
			Clearly, its better to have TNS set up properly. -->
		<driver-class>com.mysql.jdbc.Driver</driver-class>
		<user-name>root</user-name>
		<password>root</password>

		<min-pool-size>5</min-pool-size>
		<max-pool-size>100</max-pool-size>

		<!-- Uses the pingDatabase method to check a connection is still valid 
			before handing it out from the pool -->
		<!--valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker</valid-connection-checker-class-name -->
		<!-- Checks the Oracle error codes and messages for fatal errors -->
		
		<!-- sql to call when connection is created <new-connection-sql>some arbitrary 
			sql</new-connection-sql> -->

		<!-- sql to call on an existing pooled connection when it is obtained from 
			pool - the OracleValidConnectionChecker is prefered <check-valid-connection-sql>some 
			arbitrary sql</check-valid-connection-sql> -->

		<!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml (optional) -->
		
	</local-tx-datasource>

</datasources>